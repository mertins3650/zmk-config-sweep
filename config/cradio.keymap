// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/34.h"                                      // key-position labels
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4
#define THUMBS LH1 LH0 RH0 RH1


#define HM_TAPPING_TERM 300
#define HM_TAPPING_TERM_FAST 200
#define HM_PRIOR_IDLE 150



/ {
    behaviors {
        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>,  <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };

        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };

        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
        //╭──────────┬────────────────┬──────────┬───────────────┬──────────╮   ╭──────────┬────────────────┬──────────┬────────────────┬──────────╮
        //│  B       │  L             │  D       │  W            │  Z       │   │  . :     │  F             │  O       │  U             │  J       │
            &kp B      &kp W            &kp D      &kp W           &kp >          &kp DOT    &kp F            &kp O      &kp U             &kp J
        //├──────────┼────────────────┼──────────┼───────────────┼──────────┤   ├──────────┼────────────────┼──────────┼────────────────┼──────────┤
        //│  N       │  R             │  T       │  S            │  G       │   │  Y       │  H             │  E       │  A             │   I      │
            &kp N      &hm_l LGUI   R   &kp T      &hm_l LCTRL S   &kp G          &kp Y      &hm_r LCTRL H    &kp E      &hm_r LGUI A    &kp I
        //├──────────┼────────────────┼──────────┼───────────────┼──────────┤   ├──────────┼────────────────┼──────────┼────────────────┼──────────┤
        //│  Q       │  X             │  M       │  C            │  V       │   │  K       │  P             │  , ;     │  _ -           │   ENTER  │
            &kp Q      &kp X            &kp M      &kp C           &kp V          &kp K      &kp P            &kp COMMA  &kp FSLH          &kp ENTER
        //╰──────────┴────────────────┴──────────┼───────────────┼──────────┤   ├──────────┼────────────────┼──────────┴────────────────┴──────────╯
                                        TAB   &kp ENTER                                      &kp SPACE        BSPC
        //                            ╰──────────┴───────────────╯                         ╰────────────────┴──────────╯
            >;
        };
    };
};
